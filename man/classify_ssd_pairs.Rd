% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_duplicate_classification.R
\name{classify_ssd_pairs}
\alias{classify_ssd_pairs}
\title{Classify small-scale duplication-derived gene pairs into subcategories}
\usage{
classify_ssd_pairs(
  ssd_pairs = NULL,
  annotation_granges = NULL,
  annotation = NULL,
  proximal_max = 10,
  blast_inter = NULL
)
}
\arguments{
\item{ssd_pairs}{A 2-column data frame with SSD-derived gene pairs.
This data frame can be obtained by filtering the output of
\code{get_wgd_pairs()} to keep only rows where type == "SSD".}

\item{annotation_granges}{A processed GRanges object as in each element
of the list returned by \code{syntenet::process_input()}.}

\item{annotation}{A processed GRangesList or CompressedGRangesList
object as returned by \code{syntenet::process_input()}, which must
contain the gene ranges for all species.}

\item{proximal_max}{Numeric scalar with the maximum distance (in number
of genes) between two genes to consider them as proximal duplicates.
Default: 10.}

\item{blast_inter}{A list of data frames containing the tabular output
of interspecies BLAST/DIAMOND searches, as returned by \code{run_diamond()}.
Each element must contain the pairwise comparison between a target species
and its outgroup, which will be used to identify duplicated genes
derived from transpositions (TRD). If this parameter is NULL,
this function will not identify TRD genes.}
}
\value{
A 3-column data frame with the variables:
\describe{
\item{dup1}{Duplicated gene 1}
\item{dup2}{Duplicated gene 2}
\item{type}{Duplication type, which can be
"TD" (tandem duplication),
"PD" (proximal duplication),
"TRD" (transposed duplication), and
"DD" (dispersed duplication).}
}
}
\description{
SSD-derived gene pairs are classified into tandem, proximal, and dispersed
duplicates (TD, PD, and DD, respectively).
}
\examples{
data(diamond_intra)
data(diamond_inter)
data(yeast_annot)
data(yeast_seq)
blast_list <- diamond_intra
blast_inter <- diamond_inter

# Get processed annotation for S. cerevisiae
pdata <- annotation <- syntenet::process_input(yeast_seq, yeast_annot)
annotation <- pdata$annotation[1]

# Get list of intraspecies anchor pairs
anchor_pairs <- get_anchors_list(blast_list, annotation)
anchor_pairs <- anchor_pairs[[1]][, 1:2]

# Get duplicate pairs from DIAMOND output and classify them
duplicates <- diamond_intra[[1]][, 1:2]
dups <- get_wgd_pairs(anchor_pairs, duplicates)
ssd_pairs <- dups[dups$type == "SSD", ]

# Get GRanges
annotation_granges <- pdata$annotation[["Scerevisiae"]]

# Get annotation list
annotation <- pdata$annotation

# Classify SSD-derived gene pairs
ssd_classes <- classify_ssd_pairs(
    ssd_pairs, annotation_granges, annotation, blast_inter = blast_inter
)
}
